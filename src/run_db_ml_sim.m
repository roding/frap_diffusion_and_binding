%% Initialization.
clear
clc
close all hidden

addpath('signal_pde');

%% Init reandom stream.
random_seed = sum( 1e6 * clock() );
random_stream = RandStream('mt19937ar', 'Seed', random_seed);
RandStream.setGlobalStream(random_stream);

%% Simulate data.
D_SI = 2.5e-10; % m^2/s
pixel_size = 7.598e-07; % m
D = D_SI / pixel_size^2; % pixels^2 / s
k_on = 0.5;%0.05; % 1/s
k_off = 1.0;%0.01; % 1/s
mf = 0.9; % dimensionless
Ib = 30000; % a.u.
Iu = 55000; % a.u.
x_bleach = 128; % pixels
y_bleach = 128; % pixels
% r_bleach = 32; % pixels
r_bleach = 15e-6 / pixel_size; % pixels corresponding to 15 µm radius (30 µm diameter)

delta_t = 0.2650; % s
number_of_pixels = 256;
number_of_images = 10;
number_of_pad_pixels = 128;

data = signal_db(   D, ...
                    k_on, ...
                    k_off, ...
                    mf, ...
                    Ib, ...
                    Iu, ...
                    x_bleach, ...
                    y_bleach, ...
                    r_bleach, ...
                    delta_t, ...
                    number_of_pixels, ...
                    number_of_images, ...
                    number_of_pad_pixels);

data = poissrnd(data);

%% Estimate parameters.

% Set parameter bounds.
lb_D_SI = 1e-12;
ub_D_SI = 1e-8;
lb_D = lb_D_SI / pixel_size^2;
ub_D = ub_D_SI / pixel_size^2;

lb_k_on = 0.01;
ub_k_on = 10;

lb_k_off = 0.01;
ub_k_off = 10;

lb_mf = 0.0;
ub_mf = 1.0;

lb_Ib = 0.0;
ub_Ib = 2^16 - 1;

lb_Iu = 0.0;
ub_Iu = 2^16 - 1;

lb = [lb_D, lb_k_on, lb_k_off, lb_mf, lb_Ib, lb_Iu]; 
ub = [ub_D, ub_k_on, ub_k_off, ub_mf, ub_Ib, ub_Iu]; 

param_guess = [D, k_on, k_off, mf, Ib, Iu];
number_of_fits = 1;

[param_hat_px_ml, loglig_px] = estimate_db_px_ml(  data, ...
                                            x_bleach, ...
                                            y_bleach, ...
                                            r_bleach, ...
                                            delta_t, ...
                                            number_of_pixels, ...
                                            number_of_images, ...
                                            number_of_pad_pixels, ...
                                            lb, ...
                                            ub, ...
                                            param_guess, ...
                                            number_of_fits)
                                    
[param_hat_px_ls, ss_px] = estimate_db_px( data, ...
                                        x_bleach, ...
                                        y_bleach, ...
                                        r_bleach, ...
                                        delta_t, ...
                                        number_of_pixels, ...
                                        number_of_images, ...
                                        number_of_pad_pixels, ...
                                        lb, ...
                                        ub, ...
                                        param_guess, ...
                                        number_of_fits)

   